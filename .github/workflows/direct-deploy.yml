name: 🚀 Direct Deploy to Hosting

on:
  # Trigger on push to main branch
  push:
    branches: [ main ]
    paths: 
      - 'src/**'
      - 'public/**'
      - 'index.html'
      - 'package.json'
      - 'vite.config.ts'
      - 'tailwind.config.ts'
      - '**.md'
      - '**.txt'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force complete rebuild and deploy'
        required: false
        default: 'false'
        type: boolean

env:
  NODE_VERSION: '18'
  PRODUCTION_URL: 'https://mardenseo.com'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for proper builds
    
    - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: 🔧 Install dependencies
      run: |
        echo "Installing dependencies..."
        npm ci --prefer-offline --no-audit
        echo "✅ Dependencies installed successfully"
    
    - name: 🏗️ Build production bundle
      run: |
        echo "🔨 Building production bundle..."
        NODE_ENV=production npm run build
        echo "✅ Build completed!"
        
        # Verify critical files exist
        echo "🔍 Verifying build output..."
        test -f dist/index.html && echo "✅ index.html generated" || (echo "❌ index.html missing" && exit 1)
        test -d dist/assets && echo "✅ assets folder generated" || (echo "❌ assets folder missing" && exit 1)
        test -f dist/sitemap.xml && echo "✅ sitemap.xml found" || echo "⚠️ sitemap.xml missing"
        test -f dist/robots.txt && echo "✅ robots.txt found" || echo "⚠️ robots.txt missing"
        
        # Show bundle info
        echo "📊 Bundle Information:"
        ls -la dist/assets/ || echo "No assets found"
        
        # Verify sitemap is clean (no script tags)
        if grep -q "<script" dist/sitemap.xml 2>/dev/null; then
          echo "❌ ERROR: sitemap.xml contains script tags!"
          head -20 dist/sitemap.xml
          exit 1
        else
          echo "✅ sitemap.xml is clean (no script injection)"
        fi
        
    - name: 📂 Prepare files for deployment
      run: |
        echo "🗂️ Preparing deployment files..."
        
        # Set proper permissions
        find dist -type f -exec chmod 644 {} \;
        find dist -type d -exec chmod 755 {} \;
        
        # Create deployment info file
        cat > dist/deployment-info.txt << EOF
        🚀 DEPLOYMENT INFO
        ==================
        Deploy Date: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
        Git Commit: ${GITHUB_SHA:0:8}
        Branch: ${GITHUB_REF_NAME}
        Triggered By: ${GITHUB_EVENT_NAME}
        Workflow: ${GITHUB_WORKFLOW}
        Actor: ${GITHUB_ACTOR}
        
        🎯 SEO Features:
        ✅ Dynamic meta tags
        ✅ Schema.org structured data  
        ✅ Clean XML sitemap
        ✅ Open Graph optimization
        ✅ Performance optimized
        EOF
        
        echo "✅ Files prepared for deployment"
    
    - name: 🌐 Deploy via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: ./public_html/
        exclude: |
          **/.git*
          **/.DS_Store
          **/Thumbs.db
          **/*.tmp
          **/node_modules/**
        state-name: .ftp-deploy-sync-state.json
        dry-run: false
        log-level: standard
    
    - name: 🔍 Verify deployment
      run: |
        echo "🔍 Verifying deployment..."
        
        # Wait a moment for files to propagate
        sleep 30
        
        # Test critical URLs
        echo "Testing main site..."
        curl -I "${{ env.PRODUCTION_URL }}" || echo "⚠️ Main site check failed"
        
        echo "Testing JavaScript bundle..."
        curl -I "${{ env.PRODUCTION_URL }}/assets/" || echo "⚠️ Assets check failed"
        
        echo "Testing sitemap..."
        curl -I "${{ env.PRODUCTION_URL }}/sitemap.xml" || echo "⚠️ Sitemap check failed"
        
        echo "✅ Deployment verification completed"
    
    - name: 📋 Post-deployment validation
      run: |
        echo "🎯 POST-DEPLOYMENT VALIDATION"
        echo "=============================="
        
        # Test sitemap specifically for script injection
        echo "🔍 Testing sitemap for script injection..."
        SITEMAP_RESPONSE=$(curl -s "${{ env.PRODUCTION_URL }}/sitemap.xml" | head -10)
        
        if echo "$SITEMAP_RESPONSE" | grep -q "<script"; then
          echo "❌ CRITICAL: Sitemap still contains script tags!"
          echo "$SITEMAP_RESPONSE"
          echo "Manual intervention required!"
        else
          echo "✅ Sitemap is clean - no script injection detected"
        fi
        
        echo ""
        echo "🌐 Test URLs:"
        echo "Main Site: ${{ env.PRODUCTION_URL }}"
        echo "Sitemap: ${{ env.PRODUCTION_URL }}/sitemap.xml"
        echo "Robots: ${{ env.PRODUCTION_URL }}/robots.txt"
        echo ""
        echo "🎉 Deployment completed successfully!"
    
    - name: 📊 Deployment Summary
      if: always()
      run: |
        echo "================================================"
        echo "🎉 MARDEN SEO DEPLOYMENT SUMMARY"
        echo "================================================"
        echo "📦 Project: Marden SEO Professional Website"
        echo "🌐 Domain: ${{ env.PRODUCTION_URL }}"
        echo "📅 Deploy Time: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
        echo "🔨 Triggered By: ${{ github.event_name }}"
        echo "👤 Actor: ${{ github.actor }}"
        echo "📝 Commit: ${GITHUB_SHA:0:8}"
        echo ""
        echo "🔍 SEO Enhancements Deployed:"
        echo "✅ Unique meta tags for all pages"
        echo "✅ Schema.org business markup"
        echo "✅ Clean XML sitemap (no script injection)"
        echo "✅ Open Graph social optimization"
        echo "✅ Twitter Card integration"
        echo "✅ Performance-optimized bundles"
        echo ""
        echo "🚀 Next Steps:"
        echo "1. Visit ${{ env.PRODUCTION_URL }} to verify site"
        echo "2. Test key URLs for functionality"
        echo "3. Submit updated sitemap to Google Search Console"
        echo "4. Monitor SEO performance improvements"
        echo "================================================"